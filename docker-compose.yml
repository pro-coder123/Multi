version: '3'
services:
   springconfig:
     image: spring-config
     build: spring-config-server/
     restart: always
     network_mode: host
     hostname: localhost
     container_name: config-docker
     ports:
       - 8888:8888
     expose:
       - 8888

   mongo:
      image: mongo:3.4-xenial
      ports:
         - 27017:27017
      container_name: mongo-docker
      network_mode: host
      hostname: localhost

   mysql:
      image: mysql:5.7
      ports:
         - 3306:3306
      container_name: mysql_docker
      network_mode: host
      hostname: localhost
      environment:
       MYSQL_ROOT_PASSWORD: Root@123
       MYSQL_DATABASE: userDb
        
   springmovie:
      image: movieapplicationmongo-app
      build: movieApplication/
      restart: always
      network_mode: host
      hostname: localhost
      container_name: springmovie-docker
      depends_on:
        - mongo
        - springeureka
      ports:
        - 8085:8085
      expose:
        - 8085

   springuser:
      image: userapplicationsql-app
      build: userApplication/
      restart: always
      network_mode: host
      hostname: localhost
      container_name: springuser-docker
      depends_on:
        - mysql
        - springeureka
      ports:
        - 8082:8082
      expose:
        - 8082

   springzuul:
      image: springzuul
      build: springbootzuulgatewayproxy/
      restart: always
      network_mode: host
      hostname: localhost
      container_name: zuul-docker
      depends_on:
        - springmovie
        - springuser
      ports:
        - 8089:8089
      expose:
        - 8089

   springeureka:
      image: springeureka
      build: microservices-demo/
      restart: always
      network_mode: host
      hostname: localhost
      container_name: eureka-docker
      ports:
        - 8761:8761
      expose:
        - 8761

   
